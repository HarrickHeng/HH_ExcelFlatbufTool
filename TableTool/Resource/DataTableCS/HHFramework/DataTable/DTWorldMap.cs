// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace HHFramework.DataTable
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct DTWorldMap : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_4(); }
  public static DTWorldMap GetRootAsDTWorldMap(ByteBuffer _bb) { return GetRootAsDTWorldMap(_bb, new DTWorldMap()); }
  public static DTWorldMap GetRootAsDTWorldMap(ByteBuffer _bb, DTWorldMap obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DTWorldMap __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public string SceneName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSceneNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetSceneNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetSceneNameArray() { return __p.__vector_as_array<byte>(8); }
  public string SmallMapImg { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSmallMapImgBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetSmallMapImgBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetSmallMapImgArray() { return __p.__vector_as_array<byte>(10); }
  public string NPCList { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNPCListBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetNPCListBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetNPCListArray() { return __p.__vector_as_array<byte>(12); }
  public string RoleBirthPos { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRoleBirthPosBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetRoleBirthPosBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetRoleBirthPosArray() { return __p.__vector_as_array<byte>(14); }
  public string CameraRotation { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCameraRotationBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetCameraRotationBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetCameraRotationArray() { return __p.__vector_as_array<byte>(16); }
  public string TransPos { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTransPosBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetTransPosBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetTransPosArray() { return __p.__vector_as_array<byte>(18); }
  public int IsCity { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int IsShowInMap { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string PosInMap { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPosInMapBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetPosInMapBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetPosInMapArray() { return __p.__vector_as_array<byte>(24); }
  public string IcoInMap { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIcoInMapBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetIcoInMapBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetIcoInMapArray() { return __p.__vector_as_array<byte>(26); }
  public string NearScene { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNearSceneBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetNearSceneBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetNearSceneArray() { return __p.__vector_as_array<byte>(28); }
  public string AudioBG { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAudioBGBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetAudioBGBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetAudioBGArray() { return __p.__vector_as_array<byte>(30); }

  public static Offset<HHFramework.DataTable.DTWorldMap> CreateDTWorldMap(FlatBufferBuilder builder,
      int Id = 0,
      StringOffset NameOffset = default(StringOffset),
      StringOffset SceneNameOffset = default(StringOffset),
      StringOffset SmallMapImgOffset = default(StringOffset),
      StringOffset NPCListOffset = default(StringOffset),
      StringOffset RoleBirthPosOffset = default(StringOffset),
      StringOffset CameraRotationOffset = default(StringOffset),
      StringOffset TransPosOffset = default(StringOffset),
      int IsCity = 0,
      int IsShowInMap = 0,
      StringOffset PosInMapOffset = default(StringOffset),
      StringOffset IcoInMapOffset = default(StringOffset),
      StringOffset NearSceneOffset = default(StringOffset),
      StringOffset Audio_BGOffset = default(StringOffset)) {
    builder.StartTable(14);
    DTWorldMap.AddAudioBG(builder, Audio_BGOffset);
    DTWorldMap.AddNearScene(builder, NearSceneOffset);
    DTWorldMap.AddIcoInMap(builder, IcoInMapOffset);
    DTWorldMap.AddPosInMap(builder, PosInMapOffset);
    DTWorldMap.AddIsShowInMap(builder, IsShowInMap);
    DTWorldMap.AddIsCity(builder, IsCity);
    DTWorldMap.AddTransPos(builder, TransPosOffset);
    DTWorldMap.AddCameraRotation(builder, CameraRotationOffset);
    DTWorldMap.AddRoleBirthPos(builder, RoleBirthPosOffset);
    DTWorldMap.AddNPCList(builder, NPCListOffset);
    DTWorldMap.AddSmallMapImg(builder, SmallMapImgOffset);
    DTWorldMap.AddSceneName(builder, SceneNameOffset);
    DTWorldMap.AddName(builder, NameOffset);
    DTWorldMap.AddId(builder, Id);
    return DTWorldMap.EndDTWorldMap(builder);
  }

  public static void StartDTWorldMap(FlatBufferBuilder builder) { builder.StartTable(14); }
  public static void AddId(FlatBufferBuilder builder, int Id) { builder.AddInt(0, Id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddSceneName(FlatBufferBuilder builder, StringOffset SceneNameOffset) { builder.AddOffset(2, SceneNameOffset.Value, 0); }
  public static void AddSmallMapImg(FlatBufferBuilder builder, StringOffset SmallMapImgOffset) { builder.AddOffset(3, SmallMapImgOffset.Value, 0); }
  public static void AddNPCList(FlatBufferBuilder builder, StringOffset NPCListOffset) { builder.AddOffset(4, NPCListOffset.Value, 0); }
  public static void AddRoleBirthPos(FlatBufferBuilder builder, StringOffset RoleBirthPosOffset) { builder.AddOffset(5, RoleBirthPosOffset.Value, 0); }
  public static void AddCameraRotation(FlatBufferBuilder builder, StringOffset CameraRotationOffset) { builder.AddOffset(6, CameraRotationOffset.Value, 0); }
  public static void AddTransPos(FlatBufferBuilder builder, StringOffset TransPosOffset) { builder.AddOffset(7, TransPosOffset.Value, 0); }
  public static void AddIsCity(FlatBufferBuilder builder, int IsCity) { builder.AddInt(8, IsCity, 0); }
  public static void AddIsShowInMap(FlatBufferBuilder builder, int IsShowInMap) { builder.AddInt(9, IsShowInMap, 0); }
  public static void AddPosInMap(FlatBufferBuilder builder, StringOffset PosInMapOffset) { builder.AddOffset(10, PosInMapOffset.Value, 0); }
  public static void AddIcoInMap(FlatBufferBuilder builder, StringOffset IcoInMapOffset) { builder.AddOffset(11, IcoInMapOffset.Value, 0); }
  public static void AddNearScene(FlatBufferBuilder builder, StringOffset NearSceneOffset) { builder.AddOffset(12, NearSceneOffset.Value, 0); }
  public static void AddAudioBG(FlatBufferBuilder builder, StringOffset AudioBGOffset) { builder.AddOffset(13, AudioBGOffset.Value, 0); }
  public static Offset<HHFramework.DataTable.DTWorldMap> EndDTWorldMap(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<HHFramework.DataTable.DTWorldMap>(o);
  }
}


}
