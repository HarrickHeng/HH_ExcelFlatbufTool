// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace HHFramework.DataTable
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct DTNPCList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_4(); }
  public static DTNPCList GetRootAsDTNPCList(ByteBuffer _bb) { return GetRootAsDTNPCList(_bb, new DTNPCList()); }
  public static DTNPCList GetRootAsDTNPCList(ByteBuffer _bb, DTNPCList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DTNPCList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public HHFramework.DataTable.DTNPC? DTNPCs(int j) { int o = __p.__offset(4); return o != 0 ? (HHFramework.DataTable.DTNPC?)(new HHFramework.DataTable.DTNPC()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DTNPCsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<HHFramework.DataTable.DTNPCList> CreateDTNPCList(FlatBufferBuilder builder,
      VectorOffset DTNPCsOffset = default(VectorOffset)) {
    builder.StartTable(1);
    DTNPCList.AddDTNPCs(builder, DTNPCsOffset);
    return DTNPCList.EndDTNPCList(builder);
  }

  public static void StartDTNPCList(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddDTNPCs(FlatBufferBuilder builder, VectorOffset DTNPCsOffset) { builder.AddOffset(0, DTNPCsOffset.Value, 0); }
  public static VectorOffset CreateDTNPCsVector(FlatBufferBuilder builder, Offset<HHFramework.DataTable.DTNPC>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDTNPCsVectorBlock(FlatBufferBuilder builder, Offset<HHFramework.DataTable.DTNPC>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDTNPCsVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<HHFramework.DataTable.DTNPC>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDTNPCsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<HHFramework.DataTable.DTNPC>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDTNPCsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<HHFramework.DataTable.DTNPCList> EndDTNPCList(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<HHFramework.DataTable.DTNPCList>(o);
  }
}


}
