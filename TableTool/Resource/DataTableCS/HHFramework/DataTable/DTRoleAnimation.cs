// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace HHFramework.DataTable
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct DTRoleAnimation : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_4(); }
  public static DTRoleAnimation GetRootAsDTRoleAnimation(ByteBuffer _bb) { return GetRootAsDTRoleAnimation(_bb, new DTRoleAnimation()); }
  public static DTRoleAnimation GetRootAsDTRoleAnimation(ByteBuffer _bb, DTRoleAnimation obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DTRoleAnimation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Desc { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(6); }
  public int GroupId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string AnimPath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAnimPathBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetAnimPathBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetAnimPathArray() { return __p.__vector_as_array<byte>(10); }
  public byte InitLoad { get { int o = __p.__offset(12); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public int Expire { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<HHFramework.DataTable.DTRoleAnimation> CreateDTRoleAnimation(FlatBufferBuilder builder,
      int Id = 0,
      StringOffset DescOffset = default(StringOffset),
      int GroupId = 0,
      StringOffset AnimPathOffset = default(StringOffset),
      byte InitLoad = 0,
      int Expire = 0) {
    builder.StartTable(6);
    DTRoleAnimation.AddExpire(builder, Expire);
    DTRoleAnimation.AddAnimPath(builder, AnimPathOffset);
    DTRoleAnimation.AddGroupId(builder, GroupId);
    DTRoleAnimation.AddDesc(builder, DescOffset);
    DTRoleAnimation.AddId(builder, Id);
    DTRoleAnimation.AddInitLoad(builder, InitLoad);
    return DTRoleAnimation.EndDTRoleAnimation(builder);
  }

  public static void StartDTRoleAnimation(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, int Id) { builder.AddInt(0, Id, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset DescOffset) { builder.AddOffset(1, DescOffset.Value, 0); }
  public static void AddGroupId(FlatBufferBuilder builder, int GroupId) { builder.AddInt(2, GroupId, 0); }
  public static void AddAnimPath(FlatBufferBuilder builder, StringOffset AnimPathOffset) { builder.AddOffset(3, AnimPathOffset.Value, 0); }
  public static void AddInitLoad(FlatBufferBuilder builder, byte InitLoad) { builder.AddByte(4, InitLoad, 0); }
  public static void AddExpire(FlatBufferBuilder builder, int Expire) { builder.AddInt(5, Expire, 0); }
  public static Offset<HHFramework.DataTable.DTRoleAnimation> EndDTRoleAnimation(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<HHFramework.DataTable.DTRoleAnimation>(o);
  }
}


}
