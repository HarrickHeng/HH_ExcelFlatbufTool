// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace HHFramework.DataTable
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct DTBattleAttr : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_4(); }
  public static DTBattleAttr GetRootAsDTBattleAttr(ByteBuffer _bb) { return GetRootAsDTBattleAttr(_bb, new DTBattleAttr()); }
  public static DTBattleAttr GetRootAsDTBattleAttr(ByteBuffer _bb, DTBattleAttr obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DTBattleAttr __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public string AttrName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAttrNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetAttrNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetAttrNameArray() { return __p.__vector_as_array<byte>(8); }
  public string AttrIcon { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAttrIconBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetAttrIconBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetAttrIconArray() { return __p.__vector_as_array<byte>(10); }
  public string Desc { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(12); }
  public string Enum { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEnumBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetEnumBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetEnumArray() { return __p.__vector_as_array<byte>(14); }
  public int Min { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Max { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<HHFramework.DataTable.DTBattleAttr> CreateDTBattleAttr(FlatBufferBuilder builder,
      int Id = 0,
      StringOffset NameOffset = default(StringOffset),
      StringOffset AttrNameOffset = default(StringOffset),
      StringOffset AttrIconOffset = default(StringOffset),
      StringOffset DescOffset = default(StringOffset),
      StringOffset EnumOffset = default(StringOffset),
      int Min = 0,
      int Max = 0) {
    builder.StartTable(8);
    DTBattleAttr.AddMax(builder, Max);
    DTBattleAttr.AddMin(builder, Min);
    DTBattleAttr.AddEnum(builder, EnumOffset);
    DTBattleAttr.AddDesc(builder, DescOffset);
    DTBattleAttr.AddAttrIcon(builder, AttrIconOffset);
    DTBattleAttr.AddAttrName(builder, AttrNameOffset);
    DTBattleAttr.AddName(builder, NameOffset);
    DTBattleAttr.AddId(builder, Id);
    return DTBattleAttr.EndDTBattleAttr(builder);
  }

  public static void StartDTBattleAttr(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddId(FlatBufferBuilder builder, int Id) { builder.AddInt(0, Id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddAttrName(FlatBufferBuilder builder, StringOffset AttrNameOffset) { builder.AddOffset(2, AttrNameOffset.Value, 0); }
  public static void AddAttrIcon(FlatBufferBuilder builder, StringOffset AttrIconOffset) { builder.AddOffset(3, AttrIconOffset.Value, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset DescOffset) { builder.AddOffset(4, DescOffset.Value, 0); }
  public static void AddEnum(FlatBufferBuilder builder, StringOffset EnumOffset) { builder.AddOffset(5, EnumOffset.Value, 0); }
  public static void AddMin(FlatBufferBuilder builder, int Min) { builder.AddInt(6, Min, 0); }
  public static void AddMax(FlatBufferBuilder builder, int Max) { builder.AddInt(7, Max, 0); }
  public static Offset<HHFramework.DataTable.DTBattleAttr> EndDTBattleAttr(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<HHFramework.DataTable.DTBattleAttr>(o);
  }
}


}
